#!/bin/bash

# üöÄ Script de D√©ploiement AllAdsMarket sur VPS avec MySQL
# Utilisateur MySQL: tab
# Mot de passe: Newtiv15@t

echo "üöÄ D√©ploiement d'AllAdsMarket sur VPS avec MySQL"
echo "================================================"
echo ""

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# V√©rification des pr√©requis
print_status "V√©rification des pr√©requis..."

# V√©rifier Node.js
if ! command -v node &> /dev/null; then
    print_error "Node.js n'est pas install√©"
    echo "Installez Node.js: https://nodejs.org/"
    exit 1
fi

# V√©rifier npm
if ! command -v npm &> /dev/null; then
    print_error "npm n'est pas install√©"
    exit 1
fi

# V√©rifier MySQL
if ! command -v mysql &> /dev/null; then
    print_error "MySQL n'est pas install√©"
    echo "Installez MySQL: sudo apt install mysql-server"
    exit 1
fi

print_success "Pr√©requis v√©rifi√©s"

# Installation des d√©pendances
print_status "Installation des d√©pendances..."

# Backend
print_status "Installation des d√©pendances backend..."
cd bestserver
npm install
if [ $? -ne 0 ]; then
    print_error "Erreur lors de l'installation des d√©pendances backend"
    exit 1
fi

# Frontend
print_status "Installation des d√©pendances frontend..."
cd ..
npm install
if [ $? -ne 0 ]; then
    print_error "Erreur lors de l'installation des d√©pendances frontend"
    exit 1
fi

print_success "D√©pendances install√©es"

# Configuration de la base de donn√©es
print_status "Configuration de la base de donn√©es MySQL..."

# Demander les informations de connexion MySQL
echo ""
echo "üîê Configuration de la base de donn√©es MySQL"
echo "============================================="
echo ""
echo "üí° Utilisateur configur√©: tab"
echo "üí° Mot de passe configur√©: Newtiv15@t"
echo ""

read -p "Entrez le mot de passe root MySQL: " MYSQL_ROOT_PASSWORD

# Ex√©cuter le script de configuration MySQL
print_status "Cr√©ation de la base de donn√©es et de l'utilisateur..."
mysql -u root -p$MYSQL_ROOT_PASSWORD < bestserver/scripts/setup-mysql-vps.sql

if [ $? -ne 0 ]; then
    print_error "Erreur lors de la configuration de la base de donn√©es"
    echo "V√©rifiez que MySQL est d√©marr√© et que le mot de passe root est correct"
    exit 1
fi

print_success "Base de donn√©es configur√©e"

# Migration de la base de donn√©es
print_status "Migration de la base de donn√©es..."
cd bestserver
node scripts/migrate.js migrate

if [ $? -ne 0 ]; then
    print_error "Erreur lors de la migration de la base de donn√©es"
    exit 1
fi

print_success "Migration termin√©e"

# Import des donn√©es
print_status "Import des donn√©es existantes..."
node scripts/import-data.js all

if [ $? -ne 0 ]; then
    print_warning "Erreur lors de l'import des donn√©es (optionnel)"
fi

print_success "Donn√©es import√©es"

# Configuration de PM2
print_status "Configuration de PM2 pour la production..."

# Installer PM2 globalement si pas d√©j√† fait
if ! command -v pm2 &> /dev/null; then
    print_status "Installation de PM2..."
    npm install -g pm2
fi

# Cr√©er le fichier de configuration PM2
cat > ecosystem.config.js << EOF
module.exports = {
  apps: [
    {
      name: 'alladsmarket-backend',
      script: 'bestserver/index.js',
      cwd: '/path/to/your/app',
      instances: 1,
      autorestart: true,
      watch: false,
      max_memory_restart: '1G',
      env: {
        NODE_ENV: 'production',
        PORT: 5000,
        DB_HOST: 'localhost',
        DB_USER: 'tab',
        DB_PASSWORD: 'Newtiv15@t',
        DB_NAME: 'alladsmarket',
        DB_PORT: 3306
      }
    }
  ]
};
EOF

print_success "Configuration PM2 cr√©√©e"

# Build de l'application
print_status "Build de l'application frontend..."
npm run build

if [ $? -ne 0 ]; then
    print_error "Erreur lors du build de l'application"
    exit 1
fi

print_success "Application build√©e"

# D√©marrage des services
print_status "D√©marrage des services..."

# D√©marrer le backend avec PM2
pm2 start ecosystem.config.js

# D√©marrer le serveur web (Nginx recommand√©)
print_status "Configuration du serveur web..."
echo ""
echo "üìã √âtapes suivantes:"
echo "1. Configurez Nginx pour servir l'application"
echo "2. Configurez SSL/HTTPS"
echo "3. Configurez le firewall"
echo ""

print_success "D√©ploiement termin√©!"
echo ""
echo "üåê Application accessible sur votre VPS"
echo "üîß Backend: http://your-vps-ip:5000"
echo "üì± Frontend: http://your-vps-ip (apr√®s configuration Nginx)"
echo "üóÑÔ∏è  Base de donn√©es: MySQL alladsmarket"
echo ""
echo "üìä Commandes utiles:"
echo "  pm2 status          - Voir le statut des services"
echo "  pm2 logs            - Voir les logs"
echo "  pm2 restart all     - Red√©marrer tous les services"
echo "  pm2 stop all        - Arr√™ter tous les services"
echo ""
