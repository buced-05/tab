#!/bin/bash

# üõ†Ô∏è Script de Maintenance VPS AllAdsMarket
# VPS: root@91.108.120.78
# Domaine: alladsmarket.com

echo "üõ†Ô∏è Maintenance VPS AllAdsMarket"
echo "==============================="
echo "VPS: root@91.108.120.78"
echo "Domaine: alladsmarket.com"
echo ""

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration VPS
VPS_HOST="91.108.120.78"
VPS_USER="root"
VPS_DOMAIN="alladsmarket.com"
APP_DIR="/var/www/alladsmarket"

# Fonction pour afficher les messages
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Menu de maintenance
show_menu() {
    echo "Choisissez une option de maintenance:"
    echo "1. V√©rifier le statut des services"
    echo "2. Red√©marrer l'application"
    echo "3. V√©rifier les logs"
    echo "4. Mettre √† jour l'application"
    echo "5. Sauvegarder la base de donn√©es"
    echo "6. V√©rifier l'espace disque"
    echo "7. V√©rifier les certificats SSL"
    echo "8. Optimiser les performances"
    echo "9. Surveillance compl√®te"
    echo "0. Quitter"
    echo ""
    read -p "Votre choix (0-9): " choice
}

# 1. V√©rifier le statut des services
check_services() {
    print_status "V√©rification du statut des services..."
    ssh $VPS_USER@$VPS_HOST << 'EOF'
echo "=== Statut des services ==="
echo "Nginx:"
systemctl status nginx --no-pager -l
echo ""
echo "MySQL:"
systemctl status mysql --no-pager -l
echo ""
echo "PM2:"
pm2 status
echo ""
echo "Ports ouverts:"
netstat -tlnp | grep -E ':(80|443|5000|3306)'
EOF
}

# 2. Red√©marrer l'application
restart_app() {
    print_status "Red√©marrage de l'application..."
    ssh $VPS_USER@$VPS_HOST << EOF
cd $APP_DIR
pm2 restart all
pm2 save
echo "‚úÖ Application red√©marr√©e"
EOF
}

# 3. V√©rifier les logs
check_logs() {
    print_status "V√©rification des logs..."
    ssh $VPS_USER@$VPS_HOST << 'EOF'
echo "=== Logs Nginx (derni√®res 20 lignes) ==="
tail -20 /var/log/nginx/access.log
echo ""
echo "=== Logs d'erreur Nginx (derni√®res 20 lignes) ==="
tail -20 /var/log/nginx/error.log
echo ""
echo "=== Logs PM2 (derni√®res 20 lignes) ==="
pm2 logs --lines 20
EOF
}

# 4. Mettre √† jour l'application
update_app() {
    print_status "Mise √† jour de l'application..."
    ssh $VPS_USER@$VPS_HOST << EOF
cd $APP_DIR

# Sauvegarder avant mise √† jour
cp -r bestserver bestserver.backup.\$(date +%Y%m%d_%H%M%S)

# Mise √† jour du code (si git est configur√©)
# git pull origin main

# Mise √† jour des d√©pendances
npm install
cd bestserver && npm install && cd ..

# Build de l'application
npm run build

# Red√©marrage
pm2 restart all

echo "‚úÖ Application mise √† jour"
EOF
}

# 5. Sauvegarder la base de donn√©es
backup_database() {
    print_status "Sauvegarde de la base de donn√©es..."
    ssh $VPS_USER@$VPS_HOST << 'EOF'
BACKUP_DIR="/var/backups/alladsmarket"
mkdir -p $BACKUP_DIR

# Sauvegarde de la base de donn√©es
mysqldump -u tab -p'Newtiv15@t' alladsmarket > $BACKUP_DIR/alladsmarket_$(date +%Y%m%d_%H%M%S).sql

# Compression
gzip $BACKUP_DIR/alladsmarket_$(date +%Y%m%d_%H%M%S).sql

# Nettoyage des anciennes sauvegardes (garder 7 jours)
find $BACKUP_DIR -name "alladsmarket_*.sql.gz" -mtime +7 -delete

echo "‚úÖ Base de donn√©es sauvegard√©e"
ls -la $BACKUP_DIR/
EOF
}

# 6. V√©rifier l'espace disque
check_disk_space() {
    print_status "V√©rification de l'espace disque..."
    ssh $VPS_USER@$VPS_HOST << 'EOF'
echo "=== Espace disque ==="
df -h
echo ""
echo "=== Top 10 des plus gros r√©pertoires ==="
du -h /var/www/alladsmarket | sort -hr | head -10
echo ""
echo "=== Logs volumineux ==="
du -h /var/log/nginx/ | sort -hr | head -5
EOF
}

# 7. V√©rifier les certificats SSL
check_ssl() {
    print_status "V√©rification des certificats SSL..."
    ssh $VPS_USER@$VPS_HOST << 'EOF'
echo "=== Certificats SSL ==="
certbot certificates
echo ""
echo "=== Test de renouvellement ==="
certbot renew --dry-run
echo ""
echo "=== V√©rification SSL ==="
openssl s_client -connect alladsmarket.com:443 -servername alladsmarket.com < /dev/null 2>/dev/null | openssl x509 -noout -dates
EOF
}

# 8. Optimiser les performances
optimize_performance() {
    print_status "Optimisation des performances..."
    ssh $VPS_USER@$VPS_HOST << 'EOF'
# Optimisation MySQL
mysql -u root << 'MYSQL_EOF'
SET GLOBAL innodb_buffer_pool_size = 256M;
SET GLOBAL max_connections = 200;
SET GLOBAL query_cache_size = 32M;
MYSQL_EOF

# Nettoyage des logs
find /var/log -name "*.log" -mtime +7 -delete

# Optimisation Nginx
nginx -t && systemctl reload nginx

echo "‚úÖ Performances optimis√©es"
EOF
}

# 9. Surveillance compl√®te
full_monitoring() {
    print_status "Surveillance compl√®te..."
    ssh $VPS_USER@$VPS_HOST << 'EOF'
echo "=== Surveillance compl√®te AllAdsMarket ==="
echo "Date: $(date)"
echo ""

echo "=== Uptime ==="
uptime
echo ""

echo "=== M√©moire ==="
free -h
echo ""

echo "=== CPU ==="
top -bn1 | grep "Cpu(s)"
echo ""

echo "=== Services ==="
systemctl is-active nginx mysql
pm2 status
echo ""

echo "=== Connexions actives ==="
netstat -an | grep -E ':(80|443|5000|3306)' | wc -l
echo ""

echo "=== Espace disque ==="
df -h | grep -E '(/$|/var)'
echo ""

echo "=== Certificats SSL ==="
certbot certificates | grep -E "(Certificate Name|Expiry Date)"
echo ""

echo "=== Base de donn√©es ==="
mysql -u tab -p'Newtiv15@t' -e "SELECT COUNT(*) as products FROM alladsmarket.products; SELECT COUNT(*) as articles FROM alladsmarket.articles;"
EOF
}

# Menu principal
while true; do
    show_menu
    case $choice in
        1) check_services ;;
        2) restart_app ;;
        3) check_logs ;;
        4) update_app ;;
        5) backup_database ;;
        6) check_disk_space ;;
        7) check_ssl ;;
        8) optimize_performance ;;
        9) full_monitoring ;;
        0) 
            print_success "Maintenance termin√©e"
            exit 0
            ;;
        *)
            print_error "Choix invalide"
            ;;
    esac
    echo ""
    read -p "Appuyez sur Entr√©e pour continuer..."
    echo ""
done
